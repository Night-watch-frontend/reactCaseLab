{"version":3,"sources":["utils.ts","data/vehicles/contracts.ts","data/vehicles/mock.ts","data/vehicles/api.ts","components/VehicleTypeSelect.tsx","components/Filter.tsx","components/Table.tsx","App.tsx","index.tsx"],"names":["getRandomElement","array","Math","floor","random","length","round","value","fractionDigits","multiplier","pow","Number","EPSILON","VehicleType","vehicleTypes","sedan","hatchback","roadster","coupe","minivan","vehicleTypeTitles","marks","titles","vehicle","Array","from","map","_","i","start","end","title","type","id","toString","price","VehicleApi","filter","x","search","items","Select","SEP","VehicleTypeSelect","onChange","onValueChange","Filter","handleTypeChange","props","selectedType","handleTitleChange","placeholder","this","e","target","React","Component","TableItem","number","CurrencyLabel","Table","vehicles","key","initialFilter","App","useState","setVehicles","setFilter","useEffect","data","rootElement","document","getElementById","render"],"mappings":"oOAAO,SAASA,EAAoBC,GAChC,OAAOA,EAAMC,KAAKC,MAAMD,KAAKE,SAAWH,EAAMI,SAO3C,SAASC,EAAMC,GAA4C,IAA7BC,EAA4B,uDAAX,EAC5CC,EAAaP,KAAKQ,IAAI,GAAIF,GAChC,OAAON,KAAKI,OAAOC,EAAQI,OAAOC,SAAWH,GAAcA,E,MCVnDI,E,kBAAAA,O,iBAAAA,I,yBAAAA,I,uBAAAA,I,iBAAAA,I,sBAAAA,M,KAQL,IAAMC,EAA8B,CACvCD,EAAYE,MACZF,EAAYG,UACZH,EAAYI,SACZJ,EAAYK,MACZL,EAAYM,SAGHC,GAA8C,mBACtDP,EAAYE,MAAQ,kCADkC,cAEtDF,EAAYG,UAAY,8CAF8B,cAGtDH,EAAYI,SAAW,oDAH+B,cAItDJ,EAAYK,MAAQ,4BAJkC,cAKtDL,EAAYM,QAAU,8CALgC,GCbrDE,EAAkB,CACpB,MACA,OACA,OACA,MACA,SACA,SACA,cAGEC,EAAmB,CACrB,KACA,KACA,SACA,SACA,OACA,iBACA,MACA,UACA,UACA,MACA,UACA,OACA,SCvBJ,ID0BgCjB,EC1B1BkB,GD0B0BlB,EC1BA,GD2BrBmB,MAAMC,KAAK,CAACpB,WAASqB,KAAI,SAACC,EAAGC,GAChC,IF3BuBC,EAAeC,EE2BhCC,EAAK,UAAM/B,EAAiBqB,GAAvB,YAAiCrB,EAAiBsB,IACvDU,EAAOhC,EAAiBc,GAC9B,MAAO,CACHmB,GAAIL,EAAEM,WACNH,QACAC,OACAG,MAAO7B,GFjCYuB,EEiCS,IFjCMC,EEiCE,IFhCrC5B,KAAKE,UAAY0B,EAAMD,GAASA,SGA9BO,EAAb,uGAC4D,IAAzCJ,EAAwC,EAAxCA,KAAMD,EAAkC,EAAlCA,MACjB,OAAOR,EAAQc,QAAO,SAAAC,GAAC,OAAa,MAARN,GAAgBM,EAAEN,OAASA,KAAoC,IAA3BM,EAAEP,MAAMQ,OAAOR,UAFvF,K,wCCIMS,EAAmC,CACrC,EAAE,EAAkB,sBACpBC,IAAOC,OAF8B,mBAGlC5B,EAAaY,KAA2B,SAAAY,GAAC,MAAI,CAACA,EAAGlB,EAAkBkB,SAG7DK,EAAsD,SAAC,GAAuB,IAAtBpC,EAAqB,EAArBA,MAAOqC,EAAc,EAAdA,SACxE,OACI,kBAACH,EAAA,EAAD,CACID,MAAOA,EACPjC,MAAgB,MAATA,EAAgBA,GAAU,EACjCsC,cAAe,SAACP,GAAD,OAAYM,GAAgB,IAAPN,EAAW,KAAOA,OCXrDQ,EAAb,4MACUC,iBAAmB,SAACf,GAC1B,EAAKgB,MAAMJ,SAAX,2BAAyB,EAAKI,MAAMC,cAApC,IAAkDjB,WAFtD,EAKUkB,kBAAoB,SAACnB,GAC3B,EAAKiB,MAAMJ,SAAX,2BAAyB,EAAKI,MAAMC,cAApC,IAAkDlB,YANtD,uDAQ6B,IAAD,OACxB,OACE,6BACE,2BACEC,KAAK,OACLmB,YAAY,+FACZ5C,MAAO6C,KAAKJ,MAAMC,aAAalB,MAC/Ba,SAAU,SAACS,GAAD,OAAO,EAAKH,kBAAkBG,EAAEC,OAAO/C,UAEnD,kBAAC,EAAD,CACEA,MAAO6C,KAAKJ,MAAMC,aAAajB,KAC/BY,SAAUQ,KAAKL,wBAnBzB,GAA4BQ,IAAMC,W,QCI5BC,EAAuC,SAAC,GAAyB,IAAvBlC,EAAsB,EAAtBA,QAASmC,EAAa,EAAbA,OACvD,OACE,4BACE,4BAAKA,GACL,4BAAKnC,EAAQQ,OACb,4BACE,kBAAC4B,EAAA,EAAD,CAAepD,MAAOgB,EAAQY,MAAO3B,eAAgB,KAEvD,4BAAKY,EAAkBG,EAAQS,SAKxB4B,EAA+B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC7C,OACE,+BACE,+BACE,4BACE,iCACA,gFACA,gEACA,iEAGJ,+BACGA,EAASnC,KAAI,SAACY,EAAGV,GAAJ,OACZ,kBAAC,EAAD,CAAWkC,IAAKxB,EAAEL,GAAIyB,OAAQ9B,EAAI,EAAGL,QAASe,UCjClDyB,EAA+B,CACnChC,MAAO,GACPC,KAAM,MAGO,SAASgC,IAAO,IAAD,EACIC,mBAAoB,IADxB,mBACrBJ,EADqB,KACXK,EADW,OAEAD,mBAAwBF,GAFxB,mBAErB1B,EAFqB,KAEb8B,EAFa,KAS5B,OALAC,qBAAU,WACR,IAAMC,EAAOjC,EAAWG,OAAOF,GAC/B6B,EAAYG,KACX,CAAChC,IAGF,oCACE,kBAAC,EAAD,CAAQY,aAAcZ,EAAQO,SAAUuB,IACxC,kBAAC,EAAD,CAAON,SAAUA,KClBvB,IAAMS,EAAcC,SAASC,eAAe,QAC5CC,iBAAO,kBAACT,EAAD,MAASM,K","file":"static/js/main.afae2dd7.chunk.js","sourcesContent":["export function getRandomElement<T>(array: T[]): T {\r\n    return array[Math.floor(Math.random() * array.length)];\r\n}\r\n\r\nexport function getRandomDigit(start: number, end: number): number {\r\n    return Math.random() * (end - start) + start;\r\n}\r\n\r\nexport function round(value: number, fractionDigits = 2): number {\r\n    const multiplier = Math.pow(10, fractionDigits);\r\n    return Math.round((value + Number.EPSILON) * multiplier) / multiplier;\r\n}\r\n","export enum VehicleType {\r\n    sedan,\r\n    hatchback,\r\n    roadster,\r\n    coupe,\r\n    minivan\r\n}\r\n\r\nexport const vehicleTypes: VehicleType[] = [\r\n    VehicleType.sedan,\r\n    VehicleType.hatchback,\r\n    VehicleType.roadster,\r\n    VehicleType.coupe,\r\n    VehicleType.minivan\r\n];\r\n\r\nexport const vehicleTypeTitles: Record<VehicleType, string> = {\r\n    [VehicleType.sedan]: \"Седан\",\r\n    [VehicleType.hatchback]: \"Хэтчбэк\",\r\n    [VehicleType.roadster]: \"Роадстер\",\r\n    [VehicleType.coupe]: \"Купэ\",\r\n    [VehicleType.minivan]: \"Минивэн\"\r\n};\r\n\r\nexport interface Vehicle {\r\n    id: string;\r\n    type: VehicleType;\r\n    title: string;\r\n    price: number;\r\n}\r\n\r\nexport interface VehicleFilter {\r\n    title: string;\r\n    type: VehicleType | null;\r\n}\r\n","import {getRandomDigit, getRandomElement, round} from \"../../utils\";\r\nimport {Vehicle, vehicleTypes} from \"./contracts\";\r\n\r\nconst marks: string[] = [\r\n    \"BMW\",\r\n    \"Lada\",\r\n    \"Jeep\",\r\n    \"KIA\",\r\n    \"Subaru\",\r\n    \"Toyota\",\r\n    \"Volkswagen\"\r\n];\r\n\r\nconst titles: string[] = [\r\n    \"M3\",\r\n    \"M5\",\r\n    \"Granta\",\r\n    \"Kalina\",\r\n    \"Polo\",\r\n    \"Grand Cherokee\",\r\n    \"Rio\",\r\n    \"Spectra\",\r\n    \"Impreza\",\r\n    \"BRZ\",\r\n    \"Corolla\",\r\n    \"Golf\",\r\n    \"Camry\"\r\n];\r\n\r\nexport function generateVehicle(length: number): Vehicle[] {\r\n    return Array.from({length}).map((_, i) => {\r\n        const title = `${getRandomElement(marks)} ${getRandomElement(titles)}`;\r\n        const type = getRandomElement(vehicleTypes);\r\n        return {\r\n            id: i.toString(),\r\n            title,\r\n            type,\r\n            price: round(getRandomDigit(10_000, 5_000_000))\r\n        };\r\n    });\r\n}\r\n","import {generateVehicle} from \"./mock\";\r\nimport {Vehicle, VehicleFilter} from \"./contracts\";\r\n\r\nconst vehicle = generateVehicle(15);\r\n\r\nexport class VehicleApi {\r\n    static search({type, title}: VehicleFilter): Vehicle[] {\r\n        return vehicle.filter(x => (type == null || x.type === type) && x.title.search(title) !== -1);\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {VehicleType, vehicleTypes, vehicleTypeTitles} from \"../data/vehicles/contracts\";\r\nimport {Select} from \"@skbkontur/react-ui\";\r\n\r\nexport interface VehicleTypeSelectProps {\r\n    value: VehicleType | null;\r\n    onChange: (value: VehicleType | null) => void;\r\n}\r\n\r\nconst items: Array<[VehicleType, string]> = [\r\n    [-1 as VehicleType, \"Все\"],\r\n    Select.SEP() as any,\r\n    ...vehicleTypes.map<[VehicleType, string]>(x => [x, vehicleTypeTitles[x]])\r\n];\r\n\r\nexport const VehicleTypeSelect: React.FC<VehicleTypeSelectProps> = ({value, onChange}) => {\r\n    return (\r\n        <Select\r\n            items={items}\r\n            value={value != null ? value : (-1 as VehicleType)}\r\n            onValueChange={(x: any) => onChange(x === -1 ? null : x)}\r\n        />\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { VehicleTypeSelect } from \"./VehicleTypeSelect\";\r\nimport { VehicleFilter, VehicleType } from \"../data/vehicles/contracts\";\r\n\r\ninterface IFilterState {\r\n  selectedType: VehicleFilter;\r\n  onChange: (value: VehicleFilter) => void;\r\n}\r\n\r\nexport class Filter extends React.Component<IFilterState> {\r\n  private handleTypeChange = (type: VehicleType | null): void => {\r\n    this.props.onChange({ ...this.props.selectedType, type });\r\n  };\r\n\r\n  private handleTitleChange = (title: string): void => {\r\n    this.props.onChange({ ...this.props.selectedType, title });\r\n  };\r\n  render(): React.ReactNode {\r\n    return (\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Поиск по названию\"\r\n          value={this.props.selectedType.title}\r\n          onChange={(e) => this.handleTitleChange(e.target.value)}\r\n        />\r\n        <VehicleTypeSelect\r\n          value={this.props.selectedType.type}\r\n          onChange={this.handleTypeChange}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { CurrencyLabel } from \"@skbkontur/react-ui\";\r\nimport { vehicleTypeTitles, Vehicle } from \"../data/vehicles/contracts\";\r\n\r\ninterface ITableItemProps {\r\n  vehicle: Vehicle;\r\n  number: number;\r\n}\r\n\r\ninterface ITableProps {\r\n  vehicles: Vehicle[];\r\n}\r\n\r\nconst TableItem: React.FC<ITableItemProps> = ({ vehicle, number }) => {\r\n  return (\r\n    <tr>\r\n      <td>{number}</td>\r\n      <td>{vehicle.title}</td>\r\n      <td>\r\n        <CurrencyLabel value={vehicle.price} fractionDigits={2} />\r\n      </td>\r\n      <td>{vehicleTypeTitles[vehicle.type]}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport const Table: React.FC<ITableProps> = ({ vehicles }) => {\r\n  return (\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>#</th>\r\n          <th>Название</th>\r\n          <th>Цена, ₽</th>\r\n          <th>Тип ТС</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {vehicles.map((x, i) => (\r\n          <TableItem key={x.id} number={i + 1} vehicle={x} />\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Vehicle, VehicleFilter } from \"./data/vehicles/contracts\";\r\nimport { VehicleApi } from \"./data/vehicles/api\";\r\nimport { Filter } from \"./components/Filter\";\r\nimport { Table } from \"./components/Table\";\r\n\r\nconst initialFilter: VehicleFilter = {\r\n  title: \"\",\r\n  type: null,\r\n};\r\n\r\nexport default function App() {\r\n  const [vehicles, setVehicles] = useState<Vehicle[]>([]);\r\n  const [filter, setFilter] = useState<VehicleFilter>(initialFilter);\r\n\r\n  useEffect(() => {\r\n    const data = VehicleApi.search(filter);\r\n    setVehicles(data);\r\n  }, [filter]);\r\n\r\n  return (\r\n    <>\r\n      <Filter selectedType={filter} onChange={setFilter} />\r\n      <Table vehicles={vehicles} />\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nrender(<App />, rootElement);\r\n"],"sourceRoot":""}